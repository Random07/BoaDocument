From b1b0a7afed62691508d3934cf657e3c0f3eb25e9 Mon Sep 17 00:00:00 2001
From: xiaojun-he <279972007@qq.com>
Date: Sat, 7 Apr 2018 17:14:54 +0800
Subject: [PATCH] user data reciver

---
 AndroidManifest.xml                    |   7 ++
 src/com/mifi/boa/UserData.java         | 155 ++++++++++-----------------------
 src/com/mifi/boa/UserDataHandler.java  | 149 +++++++++++++++++++++++++++++++
 src/com/mifi/boa/UserDataReceiver.java |  34 ++++++++
 4 files changed, 235 insertions(+), 110 deletions(-)
 create mode 100644 src/com/mifi/boa/UserDataHandler.java
 create mode 100644 src/com/mifi/boa/UserDataReceiver.java

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index 0b66a30..a38828d 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -43,5 +43,12 @@
              </intent-filter>
        </receiver>
 
+       <receiver android:name=".UserDataReceiver">
+            <intent-filter>
+                <action android:name="com.mifi.boa.set.DataLimit"/>
+                <action android:name="com.mifi.boa.get.DataStatic"/>
+            </intent-filter>
+       </receiver>
+
     </application>
 </manifest>
diff --git a/src/com/mifi/boa/UserData.java b/src/com/mifi/boa/UserData.java
index 05f115d..d7cd32b 100644
--- a/src/com/mifi/boa/UserData.java
+++ b/src/com/mifi/boa/UserData.java
@@ -4,31 +4,19 @@ import android.content.Context;
 import android.telephony.SubscriptionManager;
 import android.telephony.TelephonyManager;
 import android.util.Log;
-import android.net.NetworkPolicyManager;
-import com.android.settingslib.NetworkPolicyEditor;
-import com.android.settingslib.net.DataUsageController;
-import android.net.NetworkTemplate;
-import android.telephony.TelephonyManager;
-import android.text.format.Formatter;
-import android.telephony.SubscriptionInfo;
-import java.util.List;
-import android.text.format.Time;
-import android.text.TextUtils;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.content.BroadcastReceiver;
 
 public class UserData {
     final String TAG = "BoaService_UserData";
-    public static final long KB_IN_BYTES = 1000;
-    public static final long MB_IN_BYTES = KB_IN_BYTES * 1000;
-    public static final long GB_IN_BYTES = MB_IN_BYTES * 1000;
-    private static final long MAX_DATA_LIMIT_BYTES = 50000 * GB_IN_BYTES;
     private static UserData sInstance;
     private Context mContext;
-    NetworkPolicyManager mPolicyManager;
-    NetworkPolicyEditor mPolicyEditor;
     int subid;
     TelephonyManager tm;
-    NetworkTemplate mTemplate;
-    SubscriptionManager mSPM;
+    private UserDataConfirmReceiver mUserDataConfirmReceiver;
+    boolean waitForConfrim;
+    String mUserDataResult;
 
     public static UserData getInstance(Context mCont){
         if (null == sInstance) {
@@ -40,9 +28,7 @@ public class UserData {
     public UserData (Context mCont) {
         mContext = mCont;
         tm = TelephonyManager.from(mContext);
-        mSPM = SubscriptionManager.from(mContext);
-        mPolicyManager = NetworkPolicyManager.from(mContext);
-        mPolicyEditor = new NetworkPolicyEditor(mPolicyManager);
+        mUserDataConfirmReceiver = new UserDataConfirmReceiver();
     }
 
     public void updateSubId(){
@@ -56,101 +42,35 @@ public class UserData {
         Log.d(TAG, "updateSubId subid = " + subid);
     }
 
-    public void getNetworkTemplate(){
-        mTemplate = null;
-        updateSubId();
-        if(SubscriptionManager.isValidSubscriptionId(subid)){
-            mTemplate = getNetworkTemplate(subid);
-        }else{
-            Log.d(TAG, "subid is invalid");
-        }
-    }
-
-    public NetworkTemplate getNetworkTemplate(int subscriptionId) {
-        NetworkTemplate mobileAll = NetworkTemplate.buildTemplateMobileAll(
-                tm.getSubscriberId(subscriptionId));
-        Log.d(TAG, "getNetworkTemplate with subID: " + subscriptionId);
-        return NetworkTemplate.normalize(mobileAll,
-                tm.getMergedSubscriberIds());
-    }
-
     public String setDataLimit(String data){
-        String[] mData = data.split("\\|");
-
-        if(mData.length < 3 || TextUtils.isEmpty(mData[2])){
-            Log.d(TAG, "data error, data is " + data);
-            return "0|DataLimit";
-        }
-
-        if(!mData[2].matches("[0-9]+")){
-            Log.d(TAG, "data error, data is " + data);
-            return "0|DataLimit";
-        }
-
-        long bytes = Long.parseLong(mData[2]);
-        long correctedBytes = Math.min(MAX_DATA_LIMIT_BYTES, bytes);
-
-        getNetworkTemplate();
-        if(mTemplate != null){
-            mPolicyEditor.read();
-            if(1 != mPolicyEditor.getPolicyCycleDay(mTemplate)){
-                mPolicyEditor.setPolicyCycleDay(mTemplate,1,new Time().timezone);
-            }
-            mPolicyEditor.setPolicyLimitBytes(mTemplate, correctedBytes);
-            return "1|DataLimit";
-        }else{
-            Log.d(TAG, "get network template fail,do not set data limit!");
-            return "0|DataLimit";
-        }
-    }
-
-    public void setDataCycle(String data){
-        String[] mData = data.split("\\|");
-        int day = Integer.parseInt(mData[2]);
-        String cycleTimezone = new Time().timezone;
-
-        getNetworkTemplate();
-        if(mTemplate != null){
-            mPolicyEditor.read();
-            Log.d(TAG, "day = "+day+"; cycleTimezone = " + cycleTimezone);
-            mPolicyEditor.setPolicyCycleDay(mTemplate,day,cycleTimezone);
-        }else{
-            Log.d(TAG, "get network template fail,do not set data cycle!");
+        Intent intent = new Intent();
+        intent.setAction("com.mifi.boa.set.DataLimit");
+        intent.putExtra("data",data);
+        mContext.sendBroadcast(intent);
+        IntentFilter intentFilter = new IntentFilter("com.mifi.boa.confirm.DataLimit");
+        mContext.registerReceiver(mUserDataConfirmReceiver, intentFilter);
+        waitForConfrim = false;
+        mUserDataResult = "";
+        while(!waitForConfrim){
+            // Do nothing
         }
+        mContext.unregisterReceiver(mUserDataConfirmReceiver);
+        return mUserDataResult;
     }
 
-    public int getDataCycle(){
-        int day = -1;
-
-        getNetworkTemplate();
-        if(mTemplate != null){
-            mPolicyEditor.read();
-            day = mPolicyEditor.getPolicyCycleDay(mTemplate);
-        }else{
-            Log.d(TAG, "get network template fail,do not set data cycle!");
-        }
-
-        return day;
-    }
     public String getDataStatic(){
-        DataUsageController controller = new DataUsageController(mContext);
-        String mStr = "1|DataStatic|";
-
-        getNetworkTemplate();
-        if(mTemplate != null){
-            DataUsageController.DataUsageInfo usageInfo = controller.getDataUsageInfo(mTemplate);
-            mPolicyEditor.read();
-            if(1 != mPolicyEditor.getPolicyCycleDay(mTemplate)){
-                mPolicyEditor.setPolicyCycleDay(mTemplate,1,new Time().timezone);
-            }
-            long mLimit = mPolicyEditor.getPolicyLimitBytes(mTemplate);
-            mStr += usageInfo.usageLevel+"|"+mLimit;
-        }else{
-            mStr = "0|DataStatic";
-            Log.d(TAG, "get network template fail,so used data and limit data is null!");
+        Intent intent = new Intent();
+        intent.setAction("com.mifi.boa.get.DataStatic");
+        mContext.sendBroadcast(intent);
+        IntentFilter intentFilter = new IntentFilter("com.mifi.boa.confirm.DataStatic");
+        mContext.registerReceiver(mUserDataConfirmReceiver, intentFilter);
+        waitForConfrim = false;
+        mUserDataResult = "";
+        while(!waitForConfrim){
+            // Do nothing
         }
-
-        return mStr;
+        mContext.unregisterReceiver(mUserDataConfirmReceiver);
+        return mUserDataResult;
     }
 
     public String  setNetworkType(String data){
@@ -174,4 +94,19 @@ public class UserData {
             return ("1|GetNetworkType|" + String.valueOf(mNetworkType));
         }
     }
+
+    private class UserDataConfirmReceiver extends BroadcastReceiver {
+        private boolean listeningToManagedProfileEvents;
+
+        @Override
+        public void onReceive(Context context, Intent intent) {
+            final String action = intent.getAction();
+            Log.v(TAG, "Received broadcast: " + action);
+            if (action.equals("com.mifi.boa.confirm.DataLimit")
+                    || action.equals("com.mifi.boa.confirm.DataStatic")) {
+                waitForConfrim = true;
+                mUserDataResult = intent.getStringExtra("data");
+            }
+        }
+    }
 }
\ No newline at end of file
diff --git a/src/com/mifi/boa/UserDataHandler.java b/src/com/mifi/boa/UserDataHandler.java
new file mode 100644
index 0000000..d8d30e4
--- /dev/null
+++ b/src/com/mifi/boa/UserDataHandler.java
@@ -0,0 +1,149 @@
+package com.mifi.boa;
+
+import android.content.Context;
+import android.telephony.SubscriptionManager;
+import android.telephony.TelephonyManager;
+import android.util.Log;
+import android.net.NetworkPolicyManager;
+import com.android.settingslib.NetworkPolicyEditor;
+import com.android.settingslib.net.DataUsageController;
+import android.net.NetworkTemplate;
+import android.text.format.Time;
+import android.text.TextUtils;
+
+public class UserDataHandler {
+    final String TAG = "BoaService_UserDataHandler";
+    public static final long KB_IN_BYTES = 1000;
+    public static final long MB_IN_BYTES = KB_IN_BYTES * 1000;
+    public static final long GB_IN_BYTES = MB_IN_BYTES * 1000;
+    private static final long MAX_DATA_LIMIT_BYTES = 50000 * GB_IN_BYTES;
+    private static UserDataHandler sInstance;
+    private Context mContext;
+    NetworkPolicyManager mPolicyManager;
+    NetworkPolicyEditor mPolicyEditor;
+    int subid;
+    TelephonyManager tm;
+    NetworkTemplate mTemplate;
+
+    public static UserDataHandler getInstance(Context mCont){
+        if (null == sInstance) {
+            sInstance = new UserDataHandler(mCont);
+        }
+        return sInstance;
+    }
+
+    public UserDataHandler (Context mCont) {
+        mContext = mCont;
+        tm = TelephonyManager.from(mContext);
+        mPolicyManager = NetworkPolicyManager.from(mContext);
+        mPolicyEditor = new NetworkPolicyEditor(mPolicyManager);
+    }
+
+    public void updateSubId(){
+        int[] subId = SubscriptionManager.getSubId(0);
+        if (subId == null || subId.length == 0
+            || !SubscriptionManager.isValidSubscriptionId(subId[0])) {
+            subid = -1;
+        } else {
+            subid = subId[0];
+        }
+        Log.d(TAG, "updateSubId subid = " + subid);
+    }
+
+    public void getNetworkTemplate(){
+        mTemplate = null;
+        updateSubId();
+        if(SubscriptionManager.isValidSubscriptionId(subid)){
+            mTemplate = getNetworkTemplate(subid);
+        }else{
+            Log.d(TAG, "subid is invalid");
+        }
+    }
+
+    public NetworkTemplate getNetworkTemplate(int subscriptionId) {
+        NetworkTemplate mobileAll = NetworkTemplate.buildTemplateMobileAll(
+                tm.getSubscriberId(subscriptionId));
+        Log.d(TAG, "getNetworkTemplate with subID: " + subscriptionId);
+        return NetworkTemplate.normalize(mobileAll,
+                tm.getMergedSubscriberIds());
+    }
+
+    public String setDataLimit(String data){
+        String[] mData = data.split("\\|");
+
+        if(mData.length < 3 || TextUtils.isEmpty(mData[2])){
+            Log.d(TAG, "data error, data is " + data);
+            return "0|DataLimit";
+        }
+
+        if(!mData[2].matches("[0-9]+")){
+            Log.d(TAG, "data error, data is " + data);
+            return "0|DataLimit";
+        }
+
+        long bytes = Long.parseLong(mData[2]);
+        long correctedBytes = Math.min(MAX_DATA_LIMIT_BYTES, bytes);
+
+        getNetworkTemplate();
+        if(mTemplate != null){
+            mPolicyEditor.read();
+            if(1 != mPolicyEditor.getPolicyCycleDay(mTemplate)){
+                mPolicyEditor.setPolicyCycleDay(mTemplate,1,new Time().timezone);
+            }
+            mPolicyEditor.setPolicyLimitBytes(mTemplate, correctedBytes);
+            return "1|DataLimit";
+        }else{
+            Log.d(TAG, "get network template fail,do not set data limit!");
+            return "0|DataLimit";
+        }
+    }
+
+    public void setDataCycle(String data){
+        String[] mData = data.split("\\|");
+        int day = Integer.parseInt(mData[2]);
+        String cycleTimezone = new Time().timezone;
+
+        getNetworkTemplate();
+        if(mTemplate != null){
+            mPolicyEditor.read();
+            Log.d(TAG, "day = "+day+"; cycleTimezone = " + cycleTimezone);
+            mPolicyEditor.setPolicyCycleDay(mTemplate,day,cycleTimezone);
+        }else{
+            Log.d(TAG, "get network template fail,do not set data cycle!");
+        }
+    }
+
+    public int getDataCycle(){
+        int day = -1;
+
+        getNetworkTemplate();
+        if(mTemplate != null){
+            mPolicyEditor.read();
+            day = mPolicyEditor.getPolicyCycleDay(mTemplate);
+        }else{
+            Log.d(TAG, "get network template fail,do not set data cycle!");
+        }
+
+        return day;
+    }
+    public String getDataStatic(){
+        DataUsageController controller = new DataUsageController(mContext);
+        String mStr = "1|DataStatic|";
+
+        getNetworkTemplate();
+        if(mTemplate != null){
+            DataUsageController.DataUsageInfo usageInfo = controller.getDataUsageInfo(mTemplate);
+            mPolicyEditor.read();
+            if(1 != mPolicyEditor.getPolicyCycleDay(mTemplate)){
+                mPolicyEditor.setPolicyCycleDay(mTemplate,1,new Time().timezone);
+            }
+            long mLimit = mPolicyEditor.getPolicyLimitBytes(mTemplate);
+            mStr += usageInfo.usageLevel+"|"+mLimit;
+        }else{
+            mStr = "0|DataStatic";
+            Log.d(TAG, "get network template fail,so used data and limit data is null!");
+        }
+
+        return mStr;
+    }
+}
\ No newline at end of file
diff --git a/src/com/mifi/boa/UserDataReceiver.java b/src/com/mifi/boa/UserDataReceiver.java
new file mode 100644
index 0000000..bb8e931
--- /dev/null
+++ b/src/com/mifi/boa/UserDataReceiver.java
@@ -0,0 +1,34 @@
+package com.mifi.boa;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.util.Log;
+
+public class UserDataReceiver extends BroadcastReceiver {
+    static final String TAG = "Boservice_UserDataReceiver";
+    private UserDataHandler mUserDataHandler;
+
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        final String action = intent.getAction();
+        Intent resultIntent = new Intent();
+        String mRet = "";
+
+        mUserDataHandler = UserDataHandler.getInstance(context);
+        Log.d(TAG, "Received broadcast: " + action);
+        if("com.mifi.boa.set.DataLimit".equals(action)){
+            String data=intent.getStringExtra("data");
+            Log.d(TAG, "data : " + data);
+            mRet = mUserDataHandler.setDataLimit(data);
+            resultIntent.setAction("com.mifi.boa.confirm.DataLimit"); 
+        }else if("com.mifi.boa.get.DataStatic".equals(action)){
+            mRet = mUserDataHandler.getDataStatic();
+            resultIntent.setAction("com.mifi.boa.confirm.DataStatic");
+        }
+        Log.d(TAG, "mRet: " + mRet);
+        resultIntent.putExtra("data",mRet);
+        context.sendBroadcast(resultIntent);
+    }
+}
-- 
2.16.2.windows.1

